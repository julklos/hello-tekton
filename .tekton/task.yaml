apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: call-resilient
spec:
  params:
    - name: repository
      description: the git repo
    - name: revision
      description: the revision
      default: master
    - name: url
      description: pr's url
  workspaces:
    - name: task-pvc
      mountPath: /artifacts
  steps:
    - name: resilient-api
      image: alpine/git
      env:
        - name: GIT_URL
          value: $(params.repository)
        - name: PR_URL
          value: $(params.url)
        - name: REVISION
          value: $(params.revision)
        # - name: HOME
        #   value: "/root"
        # - name: REGISTRY_NAMESPACE
        #   value: $(params.registryNamespace)
        # - name: IMAGE_NAME
        #   value: $(params.imageName)
        # - name: ARCHIVE_DIR
        #   value: "/artifacts"
        # - name: BUILD_NUMBER
        #   value: "0"
        # - name: GIT_BRANCH
        #   value: $(params.revision)
      command: ["/bin/bash", "-c"]
      args:
        - echo $PR_URL;
          # set -e -o pipefail;
          # ibmcloud login -a $API -r $REGION;
          # export NVM_DIR="$HOME/.nvm" && [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh";
          # cd /workspace;
          # export GIT_COMMIT=$(git rev-parse HEAD);
          # cd ..;
          # export REGISTRY_URL=$(ibmcloud cr info | grep -m1 -i '^Container Registry' | awk '{print $3;}');
          # cd /workspace && source build-docker-image.sh;
  # sidecars:
  #   - image: moby/buildkit:v0.8.1
  #     name: server
  #     securityContext:
  #       privileged: true
  #       # Use a workaround to by pass virtio-fs for Continuous Delivery shared workers
  #     command: ["sh", "-c"]
  #     args:
  #       - if [[ $(df -PT /var/lib/buildkit | awk 'NR==2 {print $2}') == virtiofs ]]; then
  #          apk add e2fsprogs &&
  #          truncate -s 20G /tmp/disk.img &&
  #          mkfs.ext4 /tmp/disk.img &&
  #          mount /tmp/disk.img /var/lib/buildkit; fi && buildkitd --addr tcp://0.0.0.0:1234;
  #     # Wait for the buildkit daemon to have available workers.
  #     readinessProbe:
  #       initialDelaySeconds: 2
  #       periodSeconds: 1
  #       exec:
  #         command: ["buildctl", "--addr", "tcp://0.0.0.0:1234", "debug", "workers"]
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: curl
  labels:
    app.kubernetes.io/version: "0.1"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/categories: CLI
    tekton.dev/tags: search
    tekton.dev/platforms: "linux/amd64,linux/s390x,linux/ppc64le,linux/arm64"
spec:
  description: >-
    This task performs curl operation to transfer data from internet.
  params:
    - name: url
      description: URL to curl'ed
      type: string
    - name: options
      description: options of url
      type: array
      default: []
    - name: curl-image
      description: option of curl image
      type: string
      default: "docker.io/curlimages/curl:7.72.0@sha256:bd5bbd35f89b867c1dccbc84b8be52f3f74dea20b46c5fe0db3780e040afcb6f" #tag: 7.72.0
  steps:
    - name: curl
      image: "$(params.curl-image)"
      command: [curl]
      args: ["$(params.options[*])", "$(params.url)"]
